---
import type { ImageMetadata } from "astro";
import type { HTMLAttributes } from "astro/types";
import { Image } from "astro:assets";

interface Props extends HTMLAttributes<"img"> {
  src: keyof typeof images | string;
  alt?: string | null;
  height?: number;
  width?: number;
  href?: string;

  noCaption?: boolean;
}

const images = import.meta.glob<{ default: ImageMetadata }>(
  "/src/assets/images/**/*.{jpeg,jpg,png,gif,svg,avif,webp}"
);

const { href, src, alt, noCaption = false, ...rest } = Astro.props;

const isPublic = typeof src === "string" && !(src in images);

function generateAlt(src: string | undefined) {
  if (!src) return "";
  const filename = src.split("/").pop()?.split(".")[0];
  return filename?.replace(/[-_]/g, " ") ?? "";
}

const resolvedAlt = alt ?? generateAlt(typeof src === "string" ? src : "");
const imageSrc = !isPublic && typeof src === "string" ? images[src] : null;
---

<figure>
  {
    href ? (
      <a href={href}>
        {isPublic ? (
          <img src={src as string} alt={resolvedAlt} {...rest} />
        ) : (
          <Image src={imageSrc!()} alt={resolvedAlt} {...rest} />
        )}
      </a>
    ) : isPublic ? (
      <img src={src as string} alt={resolvedAlt} {...rest} />
    ) : (
      <Image src={imageSrc!()} alt={resolvedAlt} {...rest} />
    )
  }

  {!noCaption && resolvedAlt && <figcaption>{resolvedAlt}</figcaption>}
</figure>

<style>
  figure {
    margin: 0;
  }
</style>
