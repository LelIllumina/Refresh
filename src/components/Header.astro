---
import Anchor from "./Anchor.astro";

interface Link {
  label: string;
  url?: string;
  children?: Link[];
}

const links: Link[] = [
  { label: "Main", url: "/" },
  { label: "About", url: "/about/" },
  { label: "Blogs", url: "/blogs/" },
  { label: "Guides", url: "/guides/" },
  {
    label: "Projects",
    children: [
      { label: "eroWeb", url: "/eroWeb/" },
      {
        label: "NekoTemp",
        url: "https://github.com/LelIllumina/Astro-Template/",
      },
      { label: "NekoFM", url: "https://lelillumina.github.io/nekofm/" },
    ],
  },
  {
    label: "Site",
    children: [
      { label: "RSS", url: "/rss.xml" },
      { label: "Atom", url: "/atom.xml" },
      { label: "Guestbook", url: "https://lel.atabook.org" },
    ],
  },
];

const currentUrl = Astro.url.pathname;
---

<header>
  <button aria-controls="navlist" aria-expanded="false" class="menu-button"
    ><span class="sr-only">Menu</span></button
  >

  <nav id="navlist" aria-label="Main Navigation">
    <ul>
      {
        links.map((link) => (
          <li class={link.children ? "dropdown" : ""}>
            {!link.children ? (
              <Anchor
                href={link.url ?? "#"}
                aria-current={currentUrl === link.url ? "page" : undefined}
              >
                {link.label}
              </Anchor>
            ) : (
              <>
                <button
                  type="button"
                  class="dropdown__title"
                  aria-expanded="false"
                  aria-controls={`${link.label.toLowerCase()}-dropdown`}
                >
                  {link.label}▾
                </button>
                <ul
                  class="dropdown__menu"
                  id={`${link.label.toLowerCase()}-dropdown`}
                >
                  {link.children.map((child) => (
                    <li>
                      <Anchor
                        href={child.url ?? "#"}
                        aria-current={
                          currentUrl === link.url ? "page" : undefined
                        }
                      >
                        {child.label}
                      </Anchor>
                    </li>
                  ))}
                </ul>
              </>
            )}
          </li>
        ))
      }
    </ul>
  </nav>
  <div id="navbar-handle">⌄</div>
</header>

<style lang="scss">
  header {
    position: fixed;
    z-index: 999;
    width: 100%;
    padding: 1rem;
  }

  .menu-button {
    display: none;
  }

  .dropdown__title {
    border: none;
    font-family: inherit;
    background-color: transparent;
  }

  nav {
    pointer-events: all;
    transform: translateY(-100px);
    transition: transform 0.2s;

    & > ul {
      grid-auto-flow: column;

      & > li {
        margin: 0 0.5rem;

        a,
        .dropdown__title {
          display: inline-block;

          font-size: 1.125rem;
          color: var(--text-950);
          text-align: center;
          text-decoration: none;
        }

        > a,
        .dropdown__title {
          padding: 1rem 0.5rem;
        }
      }
    }

    & ul {
      display: grid;
      margin: 0;
      padding: 0;
      list-style: none;

      & li {
        padding: 0;
        text-align: center;
      }
    }
  }

  .dropdown {
    position: relative;

    .dropdown__menu {
      position: absolute;
      top: calc(100% - 0.25rem);
      left: 50%;
      transform-origin: top center;
      transform: rotateX(-90deg) translateX(-50%);

      min-width: 15ch;
      padding: 0.5em 0;
      border-radius: 4px;

      opacity: 0.3;
      background-color: oklab(from var(--background-950) l a b / 75%);

      // box-shadow: 0 0.15em 0.25em oklab(from var(--accent-950) l a b / 25%);
      box-shadow:
        oklab(from var(--accent-950) l a b / 25%) 0 30px 60px -12px inset,
        oklab(from var(--accent-950) l a b / 30%) 0 18px 36px -18px inset;

      transition: 280ms transform 120ms ease-out;

      a {
        display: block;
        padding: 0.5em;
        color: var(--text-50);
      }
    }

    &:hover,
    &:focus-within {
      .dropdown__menu {
        transform: rotateX(0) translateX(-50%);
        visibility: visible;
        opacity: 1;
      }
    }
  }

  /* Hover down */
  #navbar-handle {
    position: fixed;
    top: 0;
    left: 50%;
    transform: translateX(-50%);

    font-family: inter, sans-serif;
    font-size: 1.2rem;
    color: #ccc;

    opacity: 0.7;

    transition: transform 0.2s;

    &:hover {
      cursor: pointer;
      opacity: 1;
    }
  }

  header:hover {
    nav {
      transform: translateY(0);
      opacity: 1;
      transition-delay: 0s;
    }

    #navbar-handle {
      transform: translateX(-50%) translateY(60px);
    }
  }

  /* Current Page */

  nav ul li a[aria-current="page"] {
    font-weight: 900;
    background: linear-gradient(var(--accent-200), var(--accent-800));
    background-clip: text;

    -webkit-text-fill-color: transparent;
  }

  /* Mobile header */
  @media (width <= 600px) {
    header {
      pointer-events: none;

      position: fixed;
      inset: 0 0 0 50%;

      width: initial;
      padding: 0;
    }

    nav {
      transform: translateX(100%);

      & ul {
        display: flex;
        flex-direction: column;

        height: 100vh;
        padding: min(10vh, 10rem) 2em;

        background-color: oklab(from var(--accent-50) l a b / 25%);
        backdrop-filter: blur(1rem);

        li {
          text-align: left;
        }
      }
    }

    #navbar-handle {
      display: none;
    }

    .menu-button {
      pointer-events: all;

      position: fixed;
      z-index: 9999;
      top: 2rem;
      right: 2rem;

      display: block;

      aspect-ratio: 1;
      width: 2rem;
      border: none;

      font-size: 2rem;
      color: white;

      background: url("data:image/svg+xml,%3Csvg%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20width%3D%2232%22%20height%3D%2232%22%20viewBox%3D%220%200%2024%2024%22%3E%3Cpath%20fill%3D%22white%22%20d%3D%22M3%208V7h17v1zm17%204v1H3v-1zM3%2017h17v1H3z%22%2F%3E%3C%2Fsvg%3E");
      background-repeat: no-repeat;
    }
  }
</style>

<script>
  document.querySelectorAll(".dropdown__title").forEach((btn) => {
    btn.addEventListener("mouseover", () => {
      btn.setAttribute("aria-expanded", "true");
    });

    btn.addEventListener("mouseout", () => {
      btn.setAttribute("aria-expanded", "false");
    });
  });

  const navToggle = document.querySelector(".menu-button");

  navToggle?.addEventListener("mouseover", () => {
    navToggle?.setAttribute("aria-expanded", "true");
  });
  navToggle?.addEventListener("mouseout", () => {
    navToggle?.setAttribute("aria-expanded", "false");
  });
</script>
