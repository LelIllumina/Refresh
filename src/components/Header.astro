---
interface Link {
  label: string;
  url?: string;
  children?: Link[];
}

const links: Link[] = [
  { label: "Main", url: "/" },
  { label: "About", url: "/about/" },
  { label: "Blogs", url: "/blogs/" },
  { label: "Guides", url: "/guides/" },
  {
    label: "Projects",
    children: [
      { label: "eroWeb", url: "/eroWeb/" },
      {
        label: "NekoTemp",
        url: "https://github.com/LelIllumina/Astro-Template/",
      },
      { label: "NekoFM", url: "https://lelillumina.github.io/nekofm/" },
    ],
  },
  {
    label: "Site",
    children: [
      { label: "RSS", url: "/rss.xml" },
      { label: "Atom", url: "/atom.xml" },
      { label: "Guestbook", url: "https://lel.atabook.org" },
    ],
  },
];
---

<header>
  <nav aria-label="Main Navigation">
    <ul>
      {
        links.map((link) => (
          <li class={link.children ? "dropdown" : ""}>
            {!link.children ? (
              <a href={link.url}>{link.label}</a>
            ) : (
              <>
                <button
                  type="button"
                  class="dropdown__title"
                  aria-expanded="false"
                  aria-controls={`${link.label.toLowerCase()}-dropdown`}
                >
                  {link.label}▾
                </button>
                <ul
                  class="dropdown__menu"
                  id={`${link.label.toLowerCase()}-dropdown`}
                >
                  {link.children.map((child) => (
                    <li>
                      <a href={child.url}>{child.label}</a>
                    </li>
                  ))}
                </ul>
              </>
            )}
          </li>
        ))
      }
    </ul>
  </nav>
  <div id="navbar-handle">⌄</div>
</header>

<style lang="scss">
  header {
    position: fixed;
    width: 100%;
    padding: 1rem;
  }

  .dropdown__title {
    border: none;
    font-family: inherit;
    background-color: transparent;
  }

  nav {
    transform: translateY(-100px);
    transition: transform 0.2s;

    & > ul {
      grid-auto-flow: column;

      & > li {
        margin: 0 0.5rem;

        a,
        .dropdown__title {
          display: inline-block;

          font-size: 1.125rem;
          color: var(--text-950);
          text-align: center;
          text-decoration: none;
        }

        > a,
        .dropdown__title {
          padding: 1rem 0.5rem;
        }
      }
    }

    & ul {
      display: grid;
      margin: 0;
      padding: 0;
      list-style: none;

      & li {
        padding: 0;
        text-align: center;
      }
    }
  }

  .dropdown {
    position: relative;

    .dropdown__menu {
      position: absolute;
      top: calc(100% - 0.25rem);
      left: 50%;
      transform-origin: top center;
      transform: rotateX(-90deg) translateX(-50%);

      min-width: 15ch;
      padding: 0.5em 0;
      border-radius: 4px;

      opacity: 0.3;
      background-color: oklab(from var(--background-950) l a b / 75%);
      box-shadow: 0 0.15em 0.25em oklab(from var(--accent-950) l a b / 25%);

      transition: 280ms transform 120ms ease-out;

      a {
        display: block;
        padding: 0.5em;
        color: var(--text-50);
      }
    }

    &:hover,
    &:focus-within {
      .dropdown__menu {
        transform: rotateX(0) translateX(-50%);
        visibility: visible;
        opacity: 1;
      }
    }
  }

  /* Hover down */
  #navbar-handle {
    position: fixed;
    top: 0;
    left: 50%;
    transform: translateX(-50%);

    font-family: var(--font-mono);
    font-size: 1.2rem;
    color: #ccc;

    opacity: 0.7;

    transition: transform 0.2s;

    &:hover {
      cursor: pointer;
      opacity: 1;
    }
  }

  header:hover {
    nav {
      transform: translateY(0);
      opacity: 1;
      transition-delay: 0s;
    }

    #navbar-handle {
      transform: translateX(-50%) translateY(60px);
    }
  }
</style>

<script>
  document.querySelectorAll(".dropdown__title").forEach((btn) => {
    btn.addEventListener("mouseover", () => {
      btn.setAttribute("aria-expanded", "true");
    });

    btn.addEventListener("mouseout", () => {
      btn.setAttribute("aria-expanded", "false");
    });
  });
</script>
