---
interface Heading {
  depth: number;
  slug: string;
  text: string;
}

interface Props {
  headings: Heading[];
  levels?: 1 | 2 | 3;
}

const { headings, levels = 2 } = Astro.props;
const filteredHeadings = headings.filter((heading) => heading.depth <= levels);
---

{
  filteredHeadings.length > 0 && (
    <aside class="toc-container">
      <nav aria-label="Table of contents" />
      <div>
        <h4 class="toc-title">Table of Contents</h4>
        <ul class="toc-list">
          {filteredHeadings.map((heading) => (
            <li
              class:list={{
                "toc-indent-2": heading.depth === 2,
                "toc-indent-3": heading.depth === 3,
              }}
            >
              <a href={`#${heading.slug}`} class="toc-link">
                {heading.text}
              </a>
            </li>
          ))}
        </ul>
      </div>
    </aside>
  )
}

<style>
  .toc-container {
    position: sticky;
    top: 5%;

    width: max(20vw, 15rem);
    margin: 0 auto auto;
    padding-block: 1rem;
    padding-inline: 2rem;
    border: 2px solid var(--background-800);
    border-radius: 0.5rem;

    .toc-list {
      padding: 0;
      list-style: none;

      .toc-link {
        font-size: var(--fs-400);
        color: var(--text-950);
        text-decoration: none;
      }

      li {
        margin-block-start: 0.5rem;
      }

      .toc-indent-2 {
        padding-inline-start: 1.5rem;
      }

      .toc-indent-3 {
        padding-inline-start: 3rem;
      }
    }
  }

  @container (min-width: 768px) {
    .toc-container {
      position: sticky;
      top: 5rem;
    }
  }
</style>
